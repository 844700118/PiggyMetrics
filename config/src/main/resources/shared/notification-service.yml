security:
  oauth2:
    client:
      clientId: notification-service
      clientSecret: ${NOTIFICATION_SERVICE_PASSWORD}
      accessTokenUri: http://auth-service:5000/uaa/oauth/token
      grant-type: client_credentials
      scope: server
    resource:
      user-info-uri: http://auth-service:5000/uaa/users/current

server:
  context-path: /notifications
  port: 8000

remind:
  cron: 0 0 0 * * *
  email:
    text: "Hey, {0}! We''ve missed you here on PiggyMetrics. It''s time to check your budget statistics.\r\n\r\nCheers,\r\nPiggyMetrics team"
    subject: PiggyMetrics reminder

backup:
  cron: 0 0 12 * * *
  email:
    text: "Howdy, {0}. Your account backup is ready.\r\n\r\nCheers,\r\nPiggyMetrics team"
    subject: PiggyMetrics account backup
    attachment: backup.json

spring:
  data:
    mongodb:
      host: notification-mongodb
      #username: user
      #password: ${MONGODB_PASSWORD}
      database: piggymetrics
      port: 27015

  rabbitmq:
    host: rabbitmq-server
    port: 5673
    username: ${RABBITMQ_USER}
    password: ${RABBITMQ_PASSWORD}
    virtualHost: /

  mail:
    host: smtp.qq.com
    port: 25
    #defaultEncoding: UTF-8
    username: 1433057455@qq.com
    password: snakwnrsccdigafj
    properties:
      mail:
        smtp:
          auth: true
          timeout: 25000
          starttls:
            enable: true
            required: true
          #socketFactory:
          #  port: 465
          #  class: javax.net.ssl.SSLSocketFactory
          #  fallback: false
          #ssl:
          #  enable: true
feign:
  hystrix:
    enabled: true

